name: MLOps CI/CD Pipeline

on:
  # Trigger for fast tests (Continuous Integration)
  # Activates at every pysh or pull request on main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  #  Manual trigger for fine tuning
  workflow_dispatch:

  # Scheduled Trigger for fine tuning once a week
  schedule:
    # Every Sunday at 02:00 UTC
    - cron: '0 2 * * 0'

jobs:
  # job 1: tests with pytest
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run tests
        # MODIFICA QUI: Specifica quali test eseguire
        run: python -m pytest -v tests/test_sentiment.py tests/test_api.py

  # job 2: fine tuning (only if job 1 succeded)
  train-and-deploy:
    if: github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
    needs: test # it needs that job 1 works
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install dependencies for training
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run Training and Deploy Script
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
          HF_USERNAME: ${{ secrets.HF_USERNAME }}
        run: python train.py

  # job 3: model validation (only if job 2 succeded)
  validate_model:
    needs: train-and-deploy 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          # Assicurati che 'httpx' sia in requirements.txt (l'abbiamo aggiunto prima)
      - name: Run model validation test
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }} 
        run: python -m pytest -v tests/test_validation.py