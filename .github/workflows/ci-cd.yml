name: MLOps CI/CD Pipeline

on:
  # CI
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Manual trigger for CD
  workflow_dispatch:

  # Scheduled trigger for CD 
  schedule:
    - cron: '0 2 * * 0' # Every Sunday at 02:00 UTC

jobs:
  # JOB 1: CODE TESTING
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run code unit and integration tests
        run: python -m pytest -v tests/test_sentiment.py tests/test_api.py

  # JOB 2: TRAINING
  train:
    # Only manual trigger or sceduled
    if: github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
    needs: test # Depending on job 1 success
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run Training Script
        run: python train.py
      
      - name: Find best checkpoint directory
        # Identifica il nome della cartella del checkpoint migliore (es. checkpoint-3750)
        # Assumiamo che sia l'unica sottocartella in sentiment_model_local
        id: find_checkpoint
        run: echo "BEST_CHECKPOINT_DIR=$(basename $(find sentiment_model_local -mindepth 1 -maxdepth 1 -type d -name 'checkpoint-*'))" >> $GITHUB_OUTPUT

      - name: Upload model artifact
        uses: actions/upload-artifact@v4
        with:
          name: trained-model
          # Carica il CONTENUTO della cartella del checkpoint migliore
          path: sentiment_model_local/${{ steps.find_checkpoint.outputs.BEST_CHECKPOINT_DIR }}/

# JOB 3: MODEL VALIDATION
  validate:
    needs: train # Depending on job 2 success
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt 
          
      - name: Download model artifact
        uses: actions/download-artifact@v4
        with:
          name: trained-model
          path: sentiment_model_local/

      
      - name: List downloaded model files
        run: ls -la sentiment_model_local/
          
      - name: Run model validation test
        run: python -m pytest -v tests/test_validation.py

  # JOB 4: DEPLOY
  deploy:
    needs: validate # Depending on job 3 success
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        # checkout to have deploy.py script
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Installing only deploy dependencies (huggingface_hub)
          pip install -r requirements.txt
          
      - name: Download model artifact
        # Downloading model
        uses: actions/download-artifact@v4
        with:
          name: trained-model
          path: sentiment_model_local/
          
      - name: Deploy to Hugging Face Hub
        # Push to hub
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
          HF_USERNAME: ${{ secrets.HF_USERNAME }}
        run: python deploy.py